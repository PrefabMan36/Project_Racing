using System.Collections;
using System.Collections.Generic;
using UnityEditor;
using UnityEngine;

public class Mgr_MainGame : MonoBehaviour
{
    [SerializeField] private Player_Car playerCar;
    [SerializeField] private carda carData;
    private void Start()
    {
        playerCar = GameObject.FindWithTag("Player").GetComponent<Player_Car>();
        carData = (Car_data)CarData_Manager.instance.GetCarDataByName("Super2000");
        //playerCar.SetCarMass(carData.mass);
        playerCar.SetDragCoefficient(carData.dragCoefficient);
        playerCar.SetBaseEngineAcceleration(carData.baseEngineAcceleration);
        playerCar.SetEngineRPMLimit(carData.maxEngineRPM, carData.minEngineRPM);
        switch(carData.lastGear)
        {
            case 0:
                Debug.Log("The last gear data in the table is invalid.");
                break;
            case 1:
                playerCar.SetLastGear(Car.eGEAR.eGEAR_FIRST);
                break;
            case 2:
                playerCar.SetLastGear(Car.eGEAR.eGEAR_SECOND);
                break;
            case 3:
                playerCar.SetLastGear(Car.eGEAR.eGEAR_THIRD);
                break;
            case 4:
                playerCar.SetLastGear(Car.eGEAR.eGEAR_FOURTH);
                break;
            case 5:
                playerCar.SetLastGear(Car.eGEAR.eGEAR_FIFTH);
                break;
            case 6:
                playerCar.SetLastGear(Car.eGEAR.eGEAR_SIXTH);
                break;
        }
        Debug.Log("CarData loaded. lastGear: " + carData.lastGear);
        Debug.Log("gearRatio count: " + carData.gearRatio.Count);
        Debug.Log("gearSpeedLimit count: " + carData.gearSpeedLimit.Count);
        playerCar.SetGearRatio(Car.eGEAR.eGEAR_NEUTURAL, 0f);
        playerCar.SetGearRatio(Car.eGEAR.eGEAR_REVERSE, carData.gearRatio[0]);
        playerCar.SetGearRatio(Car.eGEAR.eGEAR_FIRST, carData.gearRatio[1]);
        playerCar.SetGearRatio(Car.eGEAR.eGEAR_SECOND, carData.gearRatio[2]);
        playerCar.SetGearRatio(Car.eGEAR.eGEAR_THIRD, carData.gearRatio[3]);
        playerCar.SetGearRatio(Car.eGEAR.eGEAR_FOURTH, carData.gearRatio[4]);
        playerCar.SetGearRatio(Car.eGEAR.eGEAR_FIFTH, carData.gearRatio[5]);
        playerCar.SetGearRatio(Car.eGEAR.eGEAR_SIXTH, carData.gearRatio[6]);
        playerCar.SetFinalDriveRatio(carData.finalDriveRatio);
        playerCar.SetGearSpeedLimit(Car.eGEAR.eGEAR_NEUTURAL, 0f);
        playerCar.SetGearSpeedLimit(Car.eGEAR.eGEAR_REVERSE, carData.gearSpeedLimit[0]);
        playerCar.SetGearSpeedLimit(Car.eGEAR.eGEAR_FIRST, carData.gearSpeedLimit[1]);
        playerCar.SetGearSpeedLimit(Car.eGEAR.eGEAR_SECOND, carData.gearSpeedLimit[2]);
        playerCar.SetGearSpeedLimit(Car.eGEAR.eGEAR_THIRD, carData.gearSpeedLimit[3]);
        playerCar.SetGearSpeedLimit(Car.eGEAR.eGEAR_FOURTH, carData.gearSpeedLimit[4]);
        playerCar.SetGearSpeedLimit(Car.eGEAR.eGEAR_FIFTH, carData.gearSpeedLimit[5]);
        playerCar.SetGearSpeedLimit(Car.eGEAR.eGEAR_SIXTH, carData.gearSpeedLimit[6]);
    }
}
